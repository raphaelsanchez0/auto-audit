// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Template{
  id Int @id @default(autoincrement())
  name String
  description String
  createdAt DateTime @default(now())
  specs Spec[]
  audit Audit[]
}

model Spec {
  id          Int      @id @default(autoincrement())
  template    Template @relation(fields: [templateId], references: [id])
  templateId  Int
  name        String
  description String
  maxRating   Int

  auditSpecs  AuditSpec[]
}

model Audit {
  id         Int         @id @default(autoincrement())
  template   Template    @relation(fields: [templateId], references: [id])
  templateId Int
  createdAt  DateTime    @default(now())
  auditSpecs      AuditSpec[] // completed answers per spec
}
model AuditSpec {
  id              Int      @id @default(autoincrement())
  audit           Audit    @relation(fields: [auditId], references: [id])
  auditId         Int
  spec            Spec     @relation(fields: [specId], references: [id])
  specId          Int

  evaluatedRating Int
  context         String?
  proof           Proof?
  feedback        String?
}

model Proof {
  id        Int       @id @default(autoincrement())
  type      ProofType
  fileUrl   String?
  content   String?

  auditSpec AuditSpec @relation(fields: [auditSpecId], references: [id])
  auditSpecId Int @unique
}

// model SensitiveDocuments {
//   id        Int       @id @default(autoincrement())
//   type
// }


enum ProofType {
  pdf
  text
  screenshot
}